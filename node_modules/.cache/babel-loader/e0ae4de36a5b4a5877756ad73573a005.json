{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Desktop/karbonara-developer/src/components/Example.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useRef } from \"react\";\nimport { motion, useCycle } from \"framer-motion\";\nimport { useDimensions } from \"./use-dimensions\";\nimport { MenuToggle } from \"./MenuToggle\";\nimport { Navigation } from \"./Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sidebar = {\n  open: function () {\n    let height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n    return {\n      clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n      transition: {\n        type: \"spring\",\n        stiffness: 20,\n        restDelta: 2\n      }\n    };\n  },\n  closed: {\n    clipPath: \"circle(30px at 40px 40px)\",\n    transition: {\n      delay: 0.5,\n      type: \"spring\",\n      stiffness: 400,\n      damping: 40\n    }\n  }\n};\nexport const Example = () => {\n  _s();\n\n  const [isOpen, toggleOpen] = useCycle(false, true);\n  const containerRef = useRef(null);\n  const {\n    height\n  } = useDimensions(containerRef);\n  return /*#__PURE__*/_jsxDEV(motion.nav, {\n    initial: false,\n    animate: isOpen ? \"open\" : \"closed\",\n    custom: height,\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"background\",\n      variants: sidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MenuToggle, {\n      toggle: () => toggleOpen()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Example, \"bkodWS93JBXr46jlqLzgn3OoaQc=\", false, function () {\n  return [useCycle, useDimensions];\n});\n\n_c = Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["/Users/artem/Desktop/karbonara-developer/src/components/Example.jsx"],"names":["React","useRef","motion","useCycle","useDimensions","MenuToggle","Navigation","sidebar","open","height","clipPath","transition","type","stiffness","restDelta","closed","delay","damping","Example","isOpen","toggleOpen","containerRef"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE;AAAA,QAACC,MAAD,uEAAU,IAAV;AAAA,WAAoB;AACtBC,MAAAA,QAAQ,EAAG,UAASD,MAAM,GAAG,CAAT,GAAa,GAAI,kBADf;AAEtBE,MAAAA,UAAU,EAAE;AACRC,QAAAA,IAAI,EAAE,QADE;AAERC,QAAAA,SAAS,EAAE,EAFH;AAGRC,QAAAA,SAAS,EAAE;AAHH;AAFU,KAApB;AAAA,GADM;AASZC,EAAAA,MAAM,EAAE;AACJL,IAAAA,QAAQ,EAAE,2BADN;AAEJC,IAAAA,UAAU,EAAE;AACRK,MAAAA,KAAK,EAAE,GADC;AAERJ,MAAAA,IAAI,EAAE,QAFE;AAGRC,MAAAA,SAAS,EAAE,GAHH;AAIRI,MAAAA,OAAO,EAAE;AAJD;AAFR;AATI,CAAhB;AAoBA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,UAAT,IAAuBjB,QAAQ,CAAC,KAAD,EAAQ,IAAR,CAArC;AACA,QAAMkB,YAAY,GAAGpB,MAAM,CAAC,IAAD,CAA3B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaL,aAAa,CAACiB,YAAD,CAAhC;AAEA,sBACI,QAAC,MAAD,CAAQ,GAAR;AACI,IAAA,OAAO,EAAE,KADb;AAEI,IAAA,OAAO,EAAEF,MAAM,GAAG,MAAH,GAAY,QAF/B;AAGI,IAAA,MAAM,EAAEV,MAHZ;AAII,IAAA,GAAG,EAAEY,YAJT;AAAA,4BAMI,QAAC,MAAD,CAAQ,GAAR;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAmC,MAAA,QAAQ,EAAEd;AAA7C;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE,MAAMa,UAAU;AAApC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAjBM;;GAAMF,O;UACoBf,Q,EAEVC,a;;;KAHVc,O","sourcesContent":["import * as React from \"react\";\nimport { useRef } from \"react\";\nimport { motion, useCycle } from \"framer-motion\";\nimport { useDimensions } from \"./use-dimensions\";\nimport { MenuToggle } from \"./MenuToggle\";\nimport { Navigation } from \"./Navigation\";\n\nconst sidebar = {\n    open: (height = 1000) => ({\n        clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n        transition: {\n            type: \"spring\",\n            stiffness: 20,\n            restDelta: 2\n        }\n    }),\n    closed: {\n        clipPath: \"circle(30px at 40px 40px)\",\n        transition: {\n            delay: 0.5,\n            type: \"spring\",\n            stiffness: 400,\n            damping: 40\n        }\n    }\n};\n\nexport const Example = () => {\n    const [isOpen, toggleOpen] = useCycle(false, true);\n    const containerRef = useRef(null);\n    const { height } = useDimensions(containerRef);\n\n    return (\n        <motion.nav\n            initial={false}\n            animate={isOpen ? \"open\" : \"closed\"}\n            custom={height}\n            ref={containerRef}\n        >\n            <motion.div className=\"background\" variants={sidebar} />\n            <Navigation />\n            <MenuToggle toggle={() => toggleOpen()} />\n        </motion.nav>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}