{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\"; // Naive implementation - in reality would want to attach\n// a window or resize listener. Also use state/layoutEffect instead of ref/effect\n// if this is important to know on initial client render.\n// It would be safer to  return null for unmeasured states.\n\nexport const useDimensions = ref => {\n  _s();\n\n  const dimensions = useRef({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    dimensions.current.width = ref.current.offsetWidth;\n    dimensions.current.height = ref.current.offsetHeight;\n  }, []);\n  return dimensions.current;\n};\n\n_s(useDimensions, \"NpC5NsAphXwbxBdzDONhVAO+yb4=\");","map":{"version":3,"sources":["/Users/artem/Desktop/karbonara-developer/src/components/use-dimensions.jsx"],"names":["useEffect","useRef","useDimensions","ref","dimensions","width","height","current","offsetWidth","offsetHeight"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC,C,CAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAGC,GAAG,IAAI;AAAA;;AAChC,QAAMC,UAAU,GAAGH,MAAM,CAAC;AAAEI,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAD,CAAzB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,UAAU,CAACG,OAAX,CAAmBF,KAAnB,GAA2BF,GAAG,CAACI,OAAJ,CAAYC,WAAvC;AACAJ,IAAAA,UAAU,CAACG,OAAX,CAAmBD,MAAnB,GAA4BH,GAAG,CAACI,OAAJ,CAAYE,YAAxC;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAOL,UAAU,CAACG,OAAlB;AACH,CATM;;GAAML,a","sourcesContent":["import { useEffect, useRef } from \"react\";\n\n// Naive implementation - in reality would want to attach\n// a window or resize listener. Also use state/layoutEffect instead of ref/effect\n// if this is important to know on initial client render.\n// It would be safer to  return null for unmeasured states.\nexport const useDimensions = ref => {\n    const dimensions = useRef({ width: 0, height: 0 });\n\n    useEffect(() => {\n        dimensions.current.width = ref.current.offsetWidth;\n        dimensions.current.height = ref.current.offsetHeight;\n    }, []);\n\n    return dimensions.current;\n};\n"]},"metadata":{},"sourceType":"module"}